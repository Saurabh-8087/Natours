{"id":"../../node_modules/axios/lib/cancel/CanceledError.js","dependencies":[{"name":"C:\\Users\\login\\Desktop\\4-natours\\package.json","includedInParent":true,"mtime":1745216970728},{"name":"C:\\Users\\login\\Desktop\\4-natours\\node_modules\\axios\\package.json","includedInParent":true,"mtime":1745212461738},{"name":"../core/AxiosError","loc":{"line":3,"column":25,"index":40},"parent":"C:\\Users\\login\\Desktop\\4-natours\\node_modules\\axios\\lib\\cancel\\CanceledError.js","resolved":"C:\\Users\\login\\Desktop\\4-natours\\node_modules\\axios\\lib\\core\\AxiosError.js"},{"name":"../utils","loc":{"line":4,"column":20,"index":83},"parent":"C:\\Users\\login\\Desktop\\4-natours\\node_modules\\axios\\lib\\cancel\\CanceledError.js","resolved":"C:\\Users\\login\\Desktop\\4-natours\\node_modules\\axios\\lib\\utils.js"}],"generated":{"js":"'use strict';\n\nvar AxiosError = require('../core/AxiosError');\nvar utils = require('../utils');\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nmodule.exports = CanceledError;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/axios/lib/cancel/CanceledError.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/axios/lib/cancel/CanceledError.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/axios/lib/cancel/CanceledError.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/axios/lib/cancel/CanceledError.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/axios/lib/cancel/CanceledError.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/axios/lib/cancel/CanceledError.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/axios/lib/cancel/CanceledError.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/axios/lib/cancel/CanceledError.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/axios/lib/cancel/CanceledError.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/axios/lib/cancel/CanceledError.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/axios/lib/cancel/CanceledError.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/axios/lib/cancel/CanceledError.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/axios/lib/cancel/CanceledError.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/axios/lib/cancel/CanceledError.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/axios/lib/cancel/CanceledError.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/axios/lib/cancel/CanceledError.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/axios/lib/cancel/CanceledError.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/axios/lib/cancel/CanceledError.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/axios/lib/cancel/CanceledError.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/axios/lib/cancel/CanceledError.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/axios/lib/cancel/CanceledError.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/axios/lib/cancel/CanceledError.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/axios/lib/cancel/CanceledError.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/axios/lib/cancel/CanceledError.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/axios/lib/cancel/CanceledError.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}}],"sources":{"../../node_modules/axios/lib/cancel/CanceledError.js":"'use strict';\n\nvar AxiosError = require('../core/AxiosError');\nvar utils = require('../utils');\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nmodule.exports = CanceledError;\n"},"lineCount":25}},"error":null,"hash":"dc2cd81f1e23f36737ce01027993b899","cacheData":{"env":{}}}